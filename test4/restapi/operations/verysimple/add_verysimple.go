// Code generated by go-swagger; DO NOT EDIT.

package verysimple

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// AddVerysimpleHandlerFunc turns a function with the right signature into a add verysimple handler
type AddVerysimpleHandlerFunc func(AddVerysimpleParams) middleware.Responder

// Handle executing the request and returning a response
func (fn AddVerysimpleHandlerFunc) Handle(params AddVerysimpleParams) middleware.Responder {
	return fn(params)
}

// AddVerysimpleHandler interface for that can handle valid add verysimple params
type AddVerysimpleHandler interface {
	Handle(AddVerysimpleParams) middleware.Responder
}

// NewAddVerysimple creates a new http.Handler for the add verysimple operation
func NewAddVerysimple(ctx *middleware.Context, handler AddVerysimpleHandler) *AddVerysimple {
	return &AddVerysimple{Context: ctx, Handler: handler}
}

/*AddVerysimple swagger:route POST /verysimple Verysimple addVerysimple

Add a new record to the Cassandra table

Adds or updates a row in the Cassandra table

*/
type AddVerysimple struct {
	Context *middleware.Context
	Handler AddVerysimpleHandler
}

func (o *AddVerysimple) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewAddVerysimpleParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
